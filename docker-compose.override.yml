# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

services:  

  portainer:
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  mssqldb:
    container_name: mssqldb
    environment:
        SA_PASSWORD: "admin@123"
        ACCEPT_EULA: "Y"
    restart: always
    ports:
        - "1433:1433"
    volumes: 
        - ./sql:/sql/
    command:
        - /bin/bash
        - -c 
        - |
          # Launch MSSQL and send to background
          /opt/mssql/bin/sqlservr &
          # Wait 30 seconds for it to be available
          # (lame, I know, but there's no nc available to start prodding network ports)
          sleep 30
          # Run every script in /scripts
          # TODO set a flag so that this is only done once on creation, 
          #      and not every time the container runs
          /opt/mssql-tools/bin/sqlcmd -U sa -P admin@123 -d master -i /sql/CleanArchitectureDB.sql
          # So that the container doesn't shut down, sleep this thread
          sleep infinity

  cleanarchitectureappwebapi:
    container_name: cleanarchitectureappwebapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:MSSQLConnection=Data Source=mssqldb;Initial Catalog=CleanArchitectureDB;User ID=sa;Password=admin@123;MultipleActiveResultSets=True"
      - "IsCloudDeployment=false"
      - "DBProvider=MSSQL"
    ports:
      - 5001:5001
    depends_on:
      - mssqldb
      
  postgresdb:
    container_name: postgresdb
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=DiscountDb
    restart: always
    ports:
        - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"

  pgadmin:
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aspnetrun.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
        - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
  elasticsearch:
    container_name: elasticsearch
    environment:
        - xpack.monitoring.enabled=true
        - xpack.watcher.enabled=false
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - discovery.type=single-node
    ports:
        - "9200:9200"
    volumes:
        - elasticsearch-data:/usr/share/elasticsearch/data   

  kibana:
    container_name: kibana
    environment:        
        - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
        - elasticsearch
    ports:
        - "5601:5601"  